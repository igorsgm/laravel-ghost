# GithHub Actions Workflow generated with Ghygen
# Original configuration: https://ghygen.hi-folks.dev?code=0555902844da5dd5163a69e93327a0aa
name: Laravel Git Hooks
on:
  push:
    branches:
      - master
      - main
      - develop
  pull_request:
    branches:
      - master
      - main
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        operating-system: [ ubuntu-latest ]
        php: [ '8.1' ]
        dependency-stability: [ 'prefer-stable','prefer-lowest' ]

        laravel: [ '10.*' ]
        include:
          - laravel: 10.*
            testbench: 8.*

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.dependency-stability }} - ${{ matrix.operating-system}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies (vendor)
        uses: actions/cache@v3
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Install Laravel Dependencies
        if: steps.vendor-cache.outputs.cache-hit != 'true'
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-stability }} --prefer-dist --no-interaction --no-suggest

      - name: Update Dependencies with latest stable
        if: matrix.dependency-stability == 'prefer-stable'
        run: composer update --prefer-stable

      - name: Update Dependencies with lowest stable
        if: matrix.dependency-stability == 'prefer-lowest'
        run: composer update --prefer-stable --prefer-lowest

      # Code quality
      - name: Execute tests (Unit and Feature tests) via PestPHP
        shell: 'script -q -e -c "bash {0}"'
        # Set environment
        env:
          SESSION_DRIVER: array
          TTY: true

        run: vendor/bin/pest

      - name: Execute Code Sniffer via Laravel Pint
        run: vendor/bin/pint --test src config
